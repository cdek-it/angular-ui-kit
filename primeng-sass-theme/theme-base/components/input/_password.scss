.p-password {
    .p-icon-wrapper {
        right: $inputPaddingLeftRight;
        top: 50%;
        cursor: pointer;
        fill: $textColor;
    }

    &.p-invalid.p-component > .p-inputtext {
        @include invalid-input();
    }

    .p-input-icon {
        cursor: pointer;

        color: $inputIconColor;
        right: $inputPaddingLeftRight;
    }

    &.p-disabled {
        opacity: 1;

        .p-input-icon {
            opacity: $disabledOpacity;
        }
    }
}

.p-input-icon-right input {
    padding-right: $inputPaddingLeftRight * 2 + $primeIconFontSize;
}

.p-icon-field .p-password-icon.p-input-icon {
    right: $inputPaddingLeftRight;
    top: 20% !important;
}

.p-password-input {
    width: 100%;
    height: 100%;
    display: flex;
    min-height: $buttonHeight;
    padding: 0 $inputPaddingLeftRight;
    align-items: center;
}

.text-feedback {
    display: inline-flex;
    align-items: flex-start;

    .ti {
        position: relative;
        bottom: 1px;
    }
}

.text-feedback--default {
    color: $text-color;

    .ti {
        color: $surface-border;
    }
}

.text-feedback--success {
    color: $text-success;
}

.text-feedback--error {
    color: $text-danger;
}

.p-password-panel {
    color: $inputListTextColor;

    padding: $inputPaddingLeftRight;
    margin-top: $inputListPadding;

    border: $inputOverlayBorder;
    border-radius: $borderRadius;

    background: $inputOverlayBg;
    box-shadow: $inputOverlayShadow;

    .p-password-meter {
        overflow: hidden;

        height: .5rem;

        border-radius: 1rem;
        margin-bottom: $inlineSpacing;
        background: $passwordMeterBg;

        .p-password-strength {
            &.weak {
                background: $dangerButtonBg;
            }

            &.medium {
                background: $warningButtonBg;
            }

            &.strong {
                background: $successButtonBg;
            }
        }
    }
}
