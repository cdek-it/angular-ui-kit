* {
    box-sizing: border-box;
}

html {
    font-size: 14px;
    font-family: var(--font-family);
}

::selection {
    color: $highlightTextColor;
    background-color: $highlightBg;
}

.p-component {
    font-family: var(--font-family);
    font-feature-settings: var(--font-feature-settings, normal);
    font-size: $fontSize;
    font-weight: $fontWeight;
}

.p-component-overlay {
    background-color: $maskBg;
    transition-duration: $transitionDuration;
    padding: 0.5rem;
}

.p-disabled,
.p-component:disabled {
    pointer-events: all;
    cursor: not-allowed;

    opacity: $disabledOpacity;
    filter: grayscale(1);
}

.p-placeholder {
    opacity: $disabledOpacity;
}

.p-error {
    color: $errorColor;
}

.p-text-secondary {
    color: $textSecondaryColor;
}

.p-icon {
    width: $primeIconFontSize;
    height: $primeIconFontSize;
}

.p-link {
    font-family: var(--font-family);
    font-feature-settings: var(--font-feature-settings, normal);
    font-size: $fontSize;
    border-radius: $borderRadius;

    &:focus-visible {
        @include focused();
    }
}

.p-component-overlay-enter {
    animation: p-component-overlay-enter-animation 150ms forwards;
}

.p-component-overlay-leave {
    animation: p-component-overlay-leave-animation 150ms forwards;
}

.p-component-overlay {
    @keyframes p-component-overlay-enter-animation {
        from {
            background-color: transparent;
        }
        to {
            background-color: var(--maskbg);
        }
    }

    @keyframes p-component-overlay-leave-animation {
        from {
            background-color: var(--maskbg);
        }
        to {
            background-color: transparent;
        }
    }
}

::-webkit-scrollbar {
    width: 9px;
    height: 9px;
}

::-webkit-scrollbar-thumb {
    background-color: $scrollPanelTrackBg;
    border-radius: 4.5px;
}

::-webkit-scrollbar-thumb {
    background-color: $scrollPanelTrackBg;
    border-radius: 4.5px;
}

::-webkit-scrollbar-track {
    background-color: $surface-transparent;
}

::-webkit-scrollbar-track:hover {
    background-color: $surface-hover;
}

// Invalid styles
p-autocomplete.ng-dirty.ng-invalid > .p-autocomplete > .p-inputtext,
p-calendar.ng-dirty.ng-invalid > .p-calendar > .p-inputtext,
p-cascadeselect.ng-dirty.ng-invalid > .p-cascadeselect,
p-checkbox.ng-dirty.ng-invalid > .p-checkbox > .p-checkbox-box,
p-tristatecheckbox.ng-dirty.ng-invalid > .p-checkbox > .p-checkbox-box,
p-chips.ng-dirty.ng-invalid > .p-chips > .p-inputtext,
p-dropdown.ng-dirty.ng-invalid > .p-dropdown,
p-inputmask.ng-dirty.ng-invalid > .p-inputtext,
p-inputnumber.ng-dirty.ng-invalid > .p-inputnumber > .p-inputtext,
p-inputswitch.ng-dirty.ng-invalid > .p-inputswitch > .p-inputswitch-slider,
.p-inputtext.ng-dirty.ng-invalid,
p-listbox.ng-dirty.ng-invalid > .p-listbox,
p-multiselect.ng-dirty.ng-invalid > .p-multiselect,
p-password.ng-invalid.ng-dirty > .p-password > .p-inputtext,
p-radiobutton.ng-dirty.ng-invalid > .p-radiobutton > .p-radiobutton-box,
p-selectbutton.ng-dirty.ng-invalid > .p-selectbutton > .p-button,
p-togglebutton.ng-dirty.ng-invalid > .p-togglebutton.p-button,
p-treeselect.ng-invalid.ng-dirty > .p-treeselect {
    border-color: $inputErrorBorderColor !important;
    box-shadow: $focusShadowError !important;
}

.p-progress-spinner-circle {
    stroke: $primaryColor;
}


// стили из праймовского common.css
// без них некоторые компоненты ломаются

.p-overflow-hidden {
    overflow: hidden;
    padding-right: var(--scrollbar-width);
}

@layer primeng {
    .p-component,
    .p-component * {
        box-sizing: border-box;
    }

    .p-hidden {
        display: none;
    }

    .p-hidden-space {
        visibility: hidden;
    }

    .p-hidden-accessible {
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

    .p-hidden-accessible input,
    .p-hidden-accessible select {
        transform: scale(0);
    }

    .p-reset {
        margin: 0;
        padding: 0;
        border: 0;
        outline: 0;
        text-decoration: none;
        font-size: 100%;
        list-style: none;
    }

    .p-disabled,
    .p-disabled * {
        cursor: default !important;
        pointer-events: none;
    }

    .p-component-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .p-unselectable-text {
        user-select: none;
    }

    .p-scrollbar-measure {
        width: 100px;
        height: 100px;
        overflow: scroll;
        position: absolute;
        top: -9999px;
    }

    @-webkit-keyframes p-fadein {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
    @keyframes p-fadein {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    input[type='button'],
    input[type='submit'],
    input[type='reset'],
    input[type='file']::-webkit-file-upload-button,
    button {
        border-radius: 0;
    }

    .p-link {
        text-align: left;
        background-color: transparent;
        margin: 0;
        padding: 0;
        border: none;
        cursor: pointer;
        user-select: none;
    }

    .p-link:disabled {
        cursor: default;
    }

    .p-sr-only {
        border: 0;
        clip: rect(1px, 1px, 1px, 1px);
        clip-path: inset(50%);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
        word-wrap: normal !important;
    }

    /* Non ng overlay animations */
    .p-connected-overlay {
        opacity: 0;
        transform: scaleY(0.8);
        transition: transform 0.12s cubic-bezier(0, 0, 0.2, 1), opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
    }

    .p-connected-overlay-visible {
        opacity: 1;
        transform: scaleY(1);
    }

    .p-connected-overlay-hidden {
        opacity: 0;
        transform: scaleY(1);
        transition: opacity 0.1s linear;
    }

    .p-toggleable-content.ng-animating {
        overflow: hidden;
    }

    .p-icon-wrapper {
        display: inline-flex;
    }

    .p-icon {
        display: inline-block;
    }

    .p-icon-spin {
        -webkit-animation: p-icon-spin 2s infinite linear;
        animation: p-icon-spin 2s infinite linear;
    }
}

@-webkit-keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}

@keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}
